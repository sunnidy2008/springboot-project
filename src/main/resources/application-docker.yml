server:
  port: 9090
  
spring:
  datasource:
    url: jdbc:mysql://backend-mysql:3306/opensource?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&useSSL=false&serverTimezone=GMT%2B8
    username: 你自己的用户名 
    password: 你自己的密码
    hikari: 
      minimum-idle: 5
      maximum-pool-size: 20 #最大连接数据库连接数，设置为0时，表示没有限制
      idle-timeout: 600000 #一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟
      connection-test-query: select 1
      connection-timeout: 30000 #最大等待秒数，单位为毫秒， 超过时间会报出错误信息；
  redis: 
    host: backend-redis
    port: 6379
    #password: 
    timeout: 10000 #连接超时时间（毫秒）
    database: 0 #Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0
    lettuce:
      pool:
        max-active: 8 #连接池最大连接数（使用负值表示没有限制） 默认 8
        max-wait: -1 #连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
        max-idle: 8 #连接池中的最大空闲连接 默认 8
        min-idle: 0 #连接池中的最小空闲连接 默认 0

#如下是自定义数据
sys:
  tableSchema: opensource
  intercept: 
    url: 
      enable: true #是否启用url拦截权限校验，如果为true，则需要设置角色权限数据，否则将被拦截
      excludeRole: #若sys.urlPermission.enable为true，此处设置的是不需要做url权限拦截的角色英文名，通常为超管等角色（此处使用的是yml的list数据结构）
        superadmin,admin
    role: 
      enable: true #是否启用注解角色拦截，true为需要角色权限验证，false为不需要
      excludeRole: #排除在外的角色英文名
        superadmin,admin
  #配置不需要权限拦截的资源
  ignorePath: /plugin/**,/css/**,/images/**,/js/**,
  sso:
    url: http://42.157.129.6 #sso服务器地址
  server:
    id: springboot2demo #应用服务器id
    url: http://42.157.129.6 #应用服务器地址
  #资源路径映射
  path:
    files: c:\springboot2demo\files
    upload: c:\springboot2demo\upload
    download: c:\springboot2demo\download
    codegenerate: c:\codegenerate